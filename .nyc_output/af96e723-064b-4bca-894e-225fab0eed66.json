{"/Users/elias/Documents/GitHub/red-tetris/red_tetris_boilerplate/src/client/utils/gameLogic.js":{"path":"/Users/elias/Documents/GitHub/red-tetris/red_tetris_boilerplate/src/client/utils/gameLogic.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":54}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":64}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"15":{"start":{"line":20,"column":18},"end":{"line":20,"column":41}},"16":{"start":{"line":21,"column":33},"end":{"line":21,"column":143}},"17":{"start":{"line":22,"column":32},"end":{"line":22,"column":188}},"18":{"start":{"line":23,"column":45},"end":{"line":23,"column":376}},"19":{"start":{"line":23,"column":54},"end":{"line":23,"column":111}},"20":{"start":{"line":23,"column":80},"end":{"line":23,"column":111}},"21":{"start":{"line":23,"column":120},"end":{"line":23,"column":152}},"22":{"start":{"line":23,"column":154},"end":{"line":23,"column":374}},"23":{"start":{"line":24,"column":31},"end":{"line":24,"column":143}},"24":{"start":{"line":24,"column":122},"end":{"line":24,"column":143}},"25":{"start":{"line":25,"column":33},"end":{"line":25,"column":83}},"26":{"start":{"line":25,"column":55},"end":{"line":25,"column":83}},"27":{"start":{"line":26,"column":35},"end":{"line":26,"column":81}},"28":{"start":{"line":26,"column":82},"end":{"line":26,"column":136}},"29":{"start":{"line":26,"column":95},"end":{"line":26,"column":96}},"30":{"start":{"line":26,"column":102},"end":{"line":26,"column":110}},"31":{"start":{"line":26,"column":124},"end":{"line":26,"column":136}},"32":{"start":{"line":26,"column":137},"end":{"line":26,"column":146}},"33":{"start":{"line":27,"column":11},"end":{"line":27,"column":13}},"34":{"start":{"line":28,"column":11},"end":{"line":28,"column":13}},"35":{"start":{"line":30,"column":2},"end":{"line":34,"column":5}},"36":{"start":{"line":33,"column":4},"end":{"line":33,"column":31}},"37":{"start":{"line":37,"column":2},"end":{"line":47,"column":3}},"38":{"start":{"line":37,"column":15},"end":{"line":37,"column":16}},"39":{"start":{"line":38,"column":4},"end":{"line":46,"column":5}},"40":{"start":{"line":38,"column":17},"end":{"line":38,"column":18}},"41":{"start":{"line":39,"column":6},"end":{"line":45,"column":7}},"42":{"start":{"line":40,"column":21},"end":{"line":40,"column":29}},"43":{"start":{"line":41,"column":21},"end":{"line":41,"column":29}},"44":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"45":{"start":{"line":43,"column":10},"end":{"line":43,"column":22}},"46":{"start":{"line":48,"column":2},"end":{"line":48,"column":15}},"47":{"start":{"line":51,"column":16},"end":{"line":51,"column":46}},"48":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"49":{"start":{"line":53,"column":4},"end":{"line":53,"column":19}},"50":{"start":{"line":55,"column":2},"end":{"line":55,"column":15}},"51":{"start":{"line":58,"column":13},"end":{"line":58,"column":17}},"52":{"start":{"line":59,"column":13},"end":{"line":59,"column":17}},"53":{"start":{"line":60,"column":2},"end":{"line":60,"column":38}},"54":{"start":{"line":60,"column":28},"end":{"line":60,"column":38}},"55":{"start":{"line":61,"column":2},"end":{"line":61,"column":39}},"56":{"start":{"line":61,"column":29},"end":{"line":61,"column":39}},"57":{"start":{"line":62,"column":2},"end":{"line":62,"column":38}},"58":{"start":{"line":62,"column":28},"end":{"line":62,"column":38}},"59":{"start":{"line":63,"column":2},"end":{"line":68,"column":3}},"60":{"start":{"line":64,"column":4},"end":{"line":67,"column":6}},"61":{"start":{"line":69,"column":2},"end":{"line":72,"column":4}},"62":{"start":{"line":75,"column":17},"end":{"line":77,"column":4}},"63":{"start":{"line":76,"column":4},"end":{"line":76,"column":35}},"64":{"start":{"line":78,"column":2},"end":{"line":88,"column":3}},"65":{"start":{"line":78,"column":15},"end":{"line":78,"column":16}},"66":{"start":{"line":79,"column":4},"end":{"line":87,"column":5}},"67":{"start":{"line":79,"column":17},"end":{"line":79,"column":18}},"68":{"start":{"line":80,"column":6},"end":{"line":86,"column":7}},"69":{"start":{"line":81,"column":21},"end":{"line":81,"column":29}},"70":{"start":{"line":82,"column":21},"end":{"line":82,"column":29}},"71":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"72":{"start":{"line":84,"column":10},"end":{"line":84,"column":49}},"73":{"start":{"line":89,"column":2},"end":{"line":89,"column":18}},"74":{"start":{"line":94,"column":17},"end":{"line":109,"column":4}},"75":{"start":{"line":99,"column":19},"end":{"line":101,"column":6}},"76":{"start":{"line":100,"column":6},"end":{"line":100,"column":24}},"77":{"start":{"line":102,"column":21},"end":{"line":104,"column":6}},"78":{"start":{"line":103,"column":6},"end":{"line":103,"column":24}},"79":{"start":{"line":105,"column":29},"end":{"line":107,"column":6}},"80":{"start":{"line":106,"column":6},"end":{"line":106,"column":36}},"81":{"start":{"line":108,"column":4},"end":{"line":108,"column":57}},"82":{"start":{"line":110,"column":21},"end":{"line":110,"column":43}},"83":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"84":{"start":{"line":112,"column":4},"end":{"line":112,"column":42}},"85":{"start":{"line":114,"column":2},"end":{"line":117,"column":4}},"86":{"start":{"line":123,"column":2},"end":{"line":123,"column":27}},"87":{"start":{"line":129,"column":2},"end":{"line":131,"column":5}},"88":{"start":{"line":129,"column":18},"end":{"line":131,"column":5}},"89":{"start":{"line":130,"column":4},"end":{"line":130,"column":35}},"90":{"start":{"line":132,"column":13},"end":{"line":132,"column":28}},"91":{"start":{"line":133,"column":20},"end":{"line":133,"column":39}},"92":{"start":{"line":134,"column":17},"end":{"line":136,"column":4}},"93":{"start":{"line":135,"column":4},"end":{"line":135,"column":35}},"94":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"95":{"start":{"line":137,"column":15},"end":{"line":137,"column":16}},"96":{"start":{"line":138,"column":4},"end":{"line":138,"column":51}},"97":{"start":{"line":140,"column":2},"end":{"line":140,"column":18}},"98":{"start":{"line":145,"column":13},"end":{"line":145,"column":25}},"99":{"start":{"line":146,"column":13},"end":{"line":146,"column":28}},"100":{"start":{"line":147,"column":17},"end":{"line":147,"column":19}},"101":{"start":{"line":148,"column":2},"end":{"line":158,"column":3}},"102":{"start":{"line":148,"column":17},"end":{"line":148,"column":18}},"103":{"start":{"line":149,"column":16},"end":{"line":149,"column":21}},"104":{"start":{"line":150,"column":4},"end":{"line":156,"column":5}},"105":{"start":{"line":150,"column":19},"end":{"line":150,"column":20}},"106":{"start":{"line":151,"column":6},"end":{"line":155,"column":7}},"107":{"start":{"line":152,"column":8},"end":{"line":152,"column":27}},"108":{"start":{"line":153,"column":8},"end":{"line":153,"column":21}},"109":{"start":{"line":154,"column":8},"end":{"line":154,"column":14}},"110":{"start":{"line":157,"column":4},"end":{"line":157,"column":36}},"111":{"start":{"line":157,"column":16},"end":{"line":157,"column":36}},"112":{"start":{"line":159,"column":2},"end":{"line":159,"column":18}},"113":{"start":{"line":164,"column":16},"end":{"line":164,"column":20}},"114":{"start":{"line":167,"column":2},"end":{"line":169,"column":3}},"115":{"start":{"line":168,"column":4},"end":{"line":168,"column":14}},"116":{"start":{"line":170,"column":2},"end":{"line":173,"column":4}},"117":{"start":{"line":178,"column":18},"end":{"line":180,"column":4}},"118":{"start":{"line":179,"column":4},"end":{"line":179,"column":35}},"119":{"start":{"line":181,"column":18},"end":{"line":181,"column":67}},"120":{"start":{"line":184,"column":2},"end":{"line":199,"column":3}},"121":{"start":{"line":185,"column":4},"end":{"line":198,"column":5}},"122":{"start":{"line":185,"column":17},"end":{"line":185,"column":18}},"123":{"start":{"line":186,"column":6},"end":{"line":197,"column":7}},"124":{"start":{"line":186,"column":19},"end":{"line":186,"column":20}},"125":{"start":{"line":187,"column":8},"end":{"line":196,"column":9}},"126":{"start":{"line":188,"column":23},"end":{"line":188,"column":38}},"127":{"start":{"line":189,"column":23},"end":{"line":189,"column":38}},"128":{"start":{"line":190,"column":10},"end":{"line":195,"column":11}},"129":{"start":{"line":191,"column":12},"end":{"line":194,"column":13}},"130":{"start":{"line":193,"column":14},"end":{"line":193,"column":45}},"131":{"start":{"line":202,"column":2},"end":{"line":212,"column":3}},"132":{"start":{"line":202,"column":16},"end":{"line":202,"column":17}},"133":{"start":{"line":203,"column":4},"end":{"line":211,"column":5}},"134":{"start":{"line":203,"column":18},"end":{"line":203,"column":19}},"135":{"start":{"line":204,"column":6},"end":{"line":210,"column":7}},"136":{"start":{"line":205,"column":22},"end":{"line":205,"column":31}},"137":{"start":{"line":206,"column":22},"end":{"line":206,"column":31}},"138":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"139":{"start":{"line":208,"column":10},"end":{"line":208,"column":54}},"140":{"start":{"line":213,"column":2},"end":{"line":213,"column":19}},"141":{"start":{"line":217,"column":22},"end":{"line":217,"column":57}},"142":{"start":{"line":221,"column":2},"end":{"line":226,"column":4}},"143":{"start":{"line":222,"column":12},"end":{"line":222,"column":30}},"144":{"start":{"line":223,"column":4},"end":{"line":223,"column":39}},"145":{"start":{"line":224,"column":4},"end":{"line":224,"column":44}},"146":{"start":{"line":225,"column":4},"end":{"line":225,"column":47}},"147":{"start":{"line":231,"column":12},"end":{"line":231,"column":91}},"148":{"start":{"line":232,"column":12},"end":{"line":232,"column":25}},"149":{"start":{"line":233,"column":2},"end":{"line":238,"column":3}},"150":{"start":{"line":233,"column":15},"end":{"line":233,"column":29}},"151":{"start":{"line":234,"column":12},"end":{"line":234,"column":39}},"152":{"start":{"line":235,"column":15},"end":{"line":235,"column":31}},"153":{"start":{"line":236,"column":4},"end":{"line":236,"column":21}},"154":{"start":{"line":237,"column":4},"end":{"line":237,"column":21}},"155":{"start":{"line":239,"column":2},"end":{"line":239,"column":13}},"156":{"start":{"line":244,"column":12},"end":{"line":244,"column":63}},"157":{"start":{"line":245,"column":2},"end":{"line":245,"column":39}},"158":{"start":{"line":255,"column":17},"end":{"line":255,"column":19}},"159":{"start":{"line":256,"column":17},"end":{"line":256,"column":38}},"160":{"start":{"line":257,"column":2},"end":{"line":261,"column":3}},"161":{"start":{"line":257,"column":15},"end":{"line":257,"column":16}},"162":{"start":{"line":259,"column":18},"end":{"line":259,"column":59}},"163":{"start":{"line":260,"column":4},"end":{"line":260,"column":52}},"164":{"start":{"line":262,"column":2},"end":{"line":262,"column":35}},"165":{"start":{"line":272,"column":2},"end":{"line":272,"column":43}}},"fnMap":{"0":{"name":"_toConsumableArray","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":27}},"loc":{"start":{"line":21,"column":31},"end":{"line":21,"column":145}},"line":21},"1":{"name":"_nonIterableSpread","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":27}},"loc":{"start":{"line":22,"column":30},"end":{"line":22,"column":190}},"line":22},"2":{"name":"_unsupportedIterableToArray","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":36}},"loc":{"start":{"line":23,"column":43},"end":{"line":23,"column":378}},"line":23},"3":{"name":"_iterableToArray","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":25}},"loc":{"start":{"line":24,"column":29},"end":{"line":24,"column":145}},"line":24},"4":{"name":"_arrayWithoutHoles","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":27}},"loc":{"start":{"line":25,"column":31},"end":{"line":25,"column":85}},"line":25},"5":{"name":"_arrayLikeToArray","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":26}},"loc":{"start":{"line":26,"column":33},"end":{"line":26,"column":148}},"line":26},"6":{"name":"createEmptyBoard","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":25}},"loc":{"start":{"line":29,"column":28},"end":{"line":35,"column":1}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":5},"end":{"line":32,"column":6}},"loc":{"start":{"line":32,"column":17},"end":{"line":34,"column":3}},"line":32},"8":{"name":"checkCollision","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":23}},"loc":{"start":{"line":36,"column":50},"end":{"line":49,"column":1}},"line":36},"9":{"name":"rotatePiece","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":20}},"loc":{"start":{"line":50,"column":47},"end":{"line":56,"column":1}},"line":50},"10":{"name":"movePiece","decl":{"start":{"line":57,"column":9},"end":{"line":57,"column":18}},"loc":{"start":{"line":57,"column":56},"end":{"line":73,"column":1}},"line":57},"11":{"name":"placePiece","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":19}},"loc":{"start":{"line":74,"column":46},"end":{"line":90,"column":1}},"line":74},"12":{"name":"(anonymous_12)","decl":{"start":{"line":75,"column":27},"end":{"line":75,"column":28}},"loc":{"start":{"line":75,"column":42},"end":{"line":77,"column":3}},"line":75},"13":{"name":"clearLines","decl":{"start":{"line":91,"column":9},"end":{"line":91,"column":19}},"loc":{"start":{"line":91,"column":27},"end":{"line":118,"column":1}},"line":91},"14":{"name":"(anonymous_14)","decl":{"start":{"line":94,"column":30},"end":{"line":94,"column":31}},"loc":{"start":{"line":94,"column":45},"end":{"line":109,"column":3}},"line":94},"15":{"name":"(anonymous_15)","decl":{"start":{"line":99,"column":28},"end":{"line":99,"column":29}},"loc":{"start":{"line":99,"column":44},"end":{"line":101,"column":5}},"line":99},"16":{"name":"(anonymous_16)","decl":{"start":{"line":102,"column":30},"end":{"line":102,"column":31}},"loc":{"start":{"line":102,"column":46},"end":{"line":104,"column":5}},"line":102},"17":{"name":"(anonymous_17)","decl":{"start":{"line":105,"column":39},"end":{"line":105,"column":40}},"loc":{"start":{"line":105,"column":55},"end":{"line":107,"column":5}},"line":105},"18":{"name":"clearLinesWithGravity","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":30}},"loc":{"start":{"line":121,"column":38},"end":{"line":124,"column":1}},"line":121},"19":{"name":"addPenaltyLines","decl":{"start":{"line":128,"column":9},"end":{"line":128,"column":24}},"loc":{"start":{"line":128,"column":39},"end":{"line":141,"column":1}},"line":128},"20":{"name":"(anonymous_20)","decl":{"start":{"line":129,"column":35},"end":{"line":129,"column":36}},"loc":{"start":{"line":129,"column":50},"end":{"line":131,"column":3}},"line":129},"21":{"name":"(anonymous_21)","decl":{"start":{"line":134,"column":40},"end":{"line":134,"column":41}},"loc":{"start":{"line":134,"column":55},"end":{"line":136,"column":3}},"line":134},"22":{"name":"generateSpectrum","decl":{"start":{"line":144,"column":9},"end":{"line":144,"column":25}},"loc":{"start":{"line":144,"column":33},"end":{"line":160,"column":1}},"line":144},"23":{"name":"calculateShadowPosition","decl":{"start":{"line":163,"column":9},"end":{"line":163,"column":32}},"loc":{"start":{"line":163,"column":59},"end":{"line":174,"column":1}},"line":163},"24":{"name":"getBoardWithPieceAndShadow","decl":{"start":{"line":177,"column":9},"end":{"line":177,"column":35}},"loc":{"start":{"line":177,"column":62},"end":{"line":214,"column":1}},"line":177},"25":{"name":"(anonymous_25)","decl":{"start":{"line":178,"column":28},"end":{"line":178,"column":29}},"loc":{"start":{"line":178,"column":43},"end":{"line":180,"column":3}},"line":178},"26":{"name":"mulberry32","decl":{"start":{"line":220,"column":9},"end":{"line":220,"column":19}},"loc":{"start":{"line":220,"column":26},"end":{"line":227,"column":1}},"line":220},"27":{"name":"(anonymous_27)","decl":{"start":{"line":221,"column":9},"end":{"line":221,"column":10}},"loc":{"start":{"line":221,"column":21},"end":{"line":226,"column":3}},"line":221},"28":{"name":"shuffle","decl":{"start":{"line":230,"column":9},"end":{"line":230,"column":16}},"loc":{"start":{"line":230,"column":24},"end":{"line":240,"column":1}},"line":230},"29":{"name":"shuffleBag","decl":{"start":{"line":243,"column":9},"end":{"line":243,"column":19}},"loc":{"start":{"line":243,"column":26},"end":{"line":246,"column":1}},"line":243},"30":{"name":"createPieceSequence","decl":{"start":{"line":254,"column":9},"end":{"line":254,"column":28}},"loc":{"start":{"line":254,"column":43},"end":{"line":263,"column":1}},"line":254},"31":{"name":"getNextPiece","decl":{"start":{"line":271,"column":9},"end":{"line":271,"column":21}},"loc":{"start":{"line":271,"column":39},"end":{"line":273,"column":1}},"line":271}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":142}},"type":"binary-expr","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":61}},{"start":{"line":21,"column":65},"end":{"line":21,"column":84}},{"start":{"line":21,"column":88},"end":{"line":21,"column":118}},{"start":{"line":21,"column":122},"end":{"line":21,"column":142}}],"line":21},"1":{"loc":{"start":{"line":23,"column":45},"end":{"line":23,"column":376}},"type":"if","locations":[{"start":{"line":23,"column":45},"end":{"line":23,"column":376}},{"start":{"line":23,"column":45},"end":{"line":23,"column":376}}],"line":23},"2":{"loc":{"start":{"line":23,"column":54},"end":{"line":23,"column":111}},"type":"if","locations":[{"start":{"line":23,"column":54},"end":{"line":23,"column":111}},{"start":{"line":23,"column":54},"end":{"line":23,"column":111}}],"line":23},"3":{"loc":{"start":{"line":23,"column":161},"end":{"line":23,"column":220}},"type":"binary-expr","locations":[{"start":{"line":23,"column":161},"end":{"line":23,"column":175}},{"start":{"line":23,"column":179},"end":{"line":23,"column":192}},{"start":{"line":23,"column":197},"end":{"line":23,"column":219}}],"line":23},"4":{"loc":{"start":{"line":23,"column":222},"end":{"line":23,"column":373}},"type":"cond-expr","locations":[{"start":{"line":23,"column":251},"end":{"line":23,"column":264}},{"start":{"line":23,"column":267},"end":{"line":23,"column":373}}],"line":23},"5":{"loc":{"start":{"line":23,"column":222},"end":{"line":23,"column":248}},"type":"binary-expr","locations":[{"start":{"line":23,"column":222},"end":{"line":23,"column":233}},{"start":{"line":23,"column":237},"end":{"line":23,"column":248}}],"line":23},"6":{"loc":{"start":{"line":23,"column":267},"end":{"line":23,"column":373}},"type":"cond-expr","locations":[{"start":{"line":23,"column":341},"end":{"line":23,"column":364}},{"start":{"line":23,"column":367},"end":{"line":23,"column":373}}],"line":23},"7":{"loc":{"start":{"line":23,"column":267},"end":{"line":23,"column":338}},"type":"binary-expr","locations":[{"start":{"line":23,"column":267},"end":{"line":23,"column":284}},{"start":{"line":23,"column":288},"end":{"line":23,"column":338}}],"line":23},"8":{"loc":{"start":{"line":24,"column":31},"end":{"line":24,"column":143}},"type":"if","locations":[{"start":{"line":24,"column":31},"end":{"line":24,"column":143}},{"start":{"line":24,"column":31},"end":{"line":24,"column":143}}],"line":24},"9":{"loc":{"start":{"line":24,"column":35},"end":{"line":24,"column":120}},"type":"binary-expr","locations":[{"start":{"line":24,"column":35},"end":{"line":24,"column":63}},{"start":{"line":24,"column":67},"end":{"line":24,"column":93}},{"start":{"line":24,"column":97},"end":{"line":24,"column":120}}],"line":24},"10":{"loc":{"start":{"line":25,"column":33},"end":{"line":25,"column":83}},"type":"if","locations":[{"start":{"line":25,"column":33},"end":{"line":25,"column":83}},{"start":{"line":25,"column":33},"end":{"line":25,"column":83}}],"line":25},"11":{"loc":{"start":{"line":26,"column":35},"end":{"line":26,"column":80}},"type":"binary-expr","locations":[{"start":{"line":26,"column":36},"end":{"line":26,"column":45}},{"start":{"line":26,"column":49},"end":{"line":26,"column":61}},{"start":{"line":26,"column":67},"end":{"line":26,"column":79}}],"line":26},"12":{"loc":{"start":{"line":39,"column":6},"end":{"line":45,"column":7}},"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":45,"column":7}},{"start":{"line":39,"column":6},"end":{"line":45,"column":7}}],"line":39},"13":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"14":{"loc":{"start":{"line":42,"column":12},"end":{"line":42,"column":115}},"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":26}},{"start":{"line":42,"column":30},"end":{"line":42,"column":40}},{"start":{"line":42,"column":44},"end":{"line":42,"column":58}},{"start":{"line":42,"column":62},"end":{"line":42,"column":73}},{"start":{"line":42,"column":77},"end":{"line":42,"column":90}},{"start":{"line":42,"column":94},"end":{"line":42,"column":115}}],"line":42},"15":{"loc":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},{"start":{"line":52,"column":2},"end":{"line":54,"column":3}}],"line":52},"16":{"loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":38}},"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":38}},{"start":{"line":60,"column":2},"end":{"line":60,"column":38}}],"line":60},"17":{"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":39}},"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":39}},{"start":{"line":61,"column":2},"end":{"line":61,"column":39}}],"line":61},"18":{"loc":{"start":{"line":62,"column":2},"end":{"line":62,"column":38}},"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":38}},{"start":{"line":62,"column":2},"end":{"line":62,"column":38}}],"line":62},"19":{"loc":{"start":{"line":63,"column":2},"end":{"line":68,"column":3}},"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":68,"column":3}},{"start":{"line":63,"column":2},"end":{"line":68,"column":3}}],"line":63},"20":{"loc":{"start":{"line":80,"column":6},"end":{"line":86,"column":7}},"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":86,"column":7}},{"start":{"line":80,"column":6},"end":{"line":86,"column":7}}],"line":80},"21":{"loc":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},{"start":{"line":83,"column":8},"end":{"line":85,"column":9}}],"line":83},"22":{"loc":{"start":{"line":83,"column":12},"end":{"line":83,"column":72}},"type":"binary-expr","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":23}},{"start":{"line":83,"column":27},"end":{"line":83,"column":40}},{"start":{"line":83,"column":44},"end":{"line":83,"column":55}},{"start":{"line":83,"column":59},"end":{"line":83,"column":72}}],"line":83},"23":{"loc":{"start":{"line":106,"column":13},"end":{"line":106,"column":35}},"type":"binary-expr","locations":[{"start":{"line":106,"column":13},"end":{"line":106,"column":22}},{"start":{"line":106,"column":26},"end":{"line":106,"column":35}}],"line":106},"24":{"loc":{"start":{"line":108,"column":11},"end":{"line":108,"column":56}},"type":"binary-expr","locations":[{"start":{"line":108,"column":11},"end":{"line":108,"column":19}},{"start":{"line":108,"column":23},"end":{"line":108,"column":33}},{"start":{"line":108,"column":37},"end":{"line":108,"column":56}}],"line":108},"25":{"loc":{"start":{"line":129,"column":2},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":131,"column":5}},{"start":{"line":129,"column":2},"end":{"line":131,"column":5}}],"line":129},"26":{"loc":{"start":{"line":151,"column":6},"end":{"line":155,"column":7}},"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":155,"column":7}},{"start":{"line":151,"column":6},"end":{"line":155,"column":7}}],"line":151},"27":{"loc":{"start":{"line":157,"column":4},"end":{"line":157,"column":36}},"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":36}},{"start":{"line":157,"column":4},"end":{"line":157,"column":36}}],"line":157},"28":{"loc":{"start":{"line":184,"column":2},"end":{"line":199,"column":3}},"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":199,"column":3}},{"start":{"line":184,"column":2},"end":{"line":199,"column":3}}],"line":184},"29":{"loc":{"start":{"line":187,"column":8},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":196,"column":9}},{"start":{"line":187,"column":8},"end":{"line":196,"column":9}}],"line":187},"30":{"loc":{"start":{"line":190,"column":10},"end":{"line":195,"column":11}},"type":"if","locations":[{"start":{"line":190,"column":10},"end":{"line":195,"column":11}},{"start":{"line":190,"column":10},"end":{"line":195,"column":11}}],"line":190},"31":{"loc":{"start":{"line":190,"column":14},"end":{"line":190,"column":93}},"type":"binary-expr","locations":[{"start":{"line":190,"column":14},"end":{"line":190,"column":25}},{"start":{"line":190,"column":29},"end":{"line":190,"column":50}},{"start":{"line":190,"column":54},"end":{"line":190,"column":65}},{"start":{"line":190,"column":69},"end":{"line":190,"column":93}}],"line":190},"32":{"loc":{"start":{"line":191,"column":12},"end":{"line":194,"column":13}},"type":"if","locations":[{"start":{"line":191,"column":12},"end":{"line":194,"column":13}},{"start":{"line":191,"column":12},"end":{"line":194,"column":13}}],"line":191},"33":{"loc":{"start":{"line":204,"column":6},"end":{"line":210,"column":7}},"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":210,"column":7}},{"start":{"line":204,"column":6},"end":{"line":210,"column":7}}],"line":204},"34":{"loc":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},{"start":{"line":207,"column":8},"end":{"line":209,"column":9}}],"line":207},"35":{"loc":{"start":{"line":207,"column":12},"end":{"line":207,"column":95}},"type":"binary-expr","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":24}},{"start":{"line":207,"column":28},"end":{"line":207,"column":50}},{"start":{"line":207,"column":54},"end":{"line":207,"column":66}},{"start":{"line":207,"column":70},"end":{"line":207,"column":95}}],"line":207},"36":{"loc":{"start":{"line":231,"column":12},"end":{"line":231,"column":91}},"type":"cond-expr","locations":[{"start":{"line":231,"column":65},"end":{"line":231,"column":77}},{"start":{"line":231,"column":80},"end":{"line":231,"column":91}}],"line":231},"37":{"loc":{"start":{"line":231,"column":12},"end":{"line":231,"column":62}},"type":"binary-expr","locations":[{"start":{"line":231,"column":12},"end":{"line":231,"column":32}},{"start":{"line":231,"column":36},"end":{"line":231,"column":62}}],"line":231},"38":{"loc":{"start":{"line":244,"column":12},"end":{"line":244,"column":63}},"type":"cond-expr","locations":[{"start":{"line":244,"column":33},"end":{"line":244,"column":49}},{"start":{"line":244,"column":52},"end":{"line":244,"column":63}}],"line":244},"39":{"loc":{"start":{"line":259,"column":18},"end":{"line":259,"column":59}},"type":"cond-expr","locations":[{"start":{"line":259,"column":39},"end":{"line":259,"column":47}},{"start":{"line":259,"column":50},"end":{"line":259,"column":59}}],"line":259}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"0":[0,0,0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"inputSourceMap":{"version":3,"names":["_tetrominos","require","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","e","n","ROWS","COLS","createEmptyBoard","fill","checkCollision","piece","board","posX","posY","y","x","boardY","boardX","rotatePiece","rotated","rotateMatrix","movePiece","direction","newX","newY","placePiece","newBoard","map","row","clearLines","filter","hasEmpty","some","cell","hasPenalty","isCompletelyFilled","every","linesCleared","unshift","clearLinesWithGravity","addPenaltyLines","count","penaltyLine","i","push","generateSpectrum","spectrum","col","found","calculateShadowPosition","shadowY","getBoardWithPieceAndShadow","boardCopy","shadowPos","TETROMINO_TYPES","mulberry32","seed","Math","imul","shuffle","array","rng","arguments","undefined","random","arr","j","floor","_ref","shuffleBag","createPieceSequence","sequence","bagCount","ceil","bagSeed","concat","getNextPiece","index"],"sourceRoot":"/Users/elias/Documents/GitHub/red-tetris/red_tetris_boilerplate/src/client/utils/","sources":["gameLogic.js"],"sourcesContent":["import { rotate as rotateMatrix } from './tetrominos';\n\nconst ROWS = 20;\nconst COLS = 10;\n\nexport function createEmptyBoard() {\n  return Array.from({ length: ROWS }, () => Array(COLS).fill(0));\n}\n\nexport function checkCollision(piece, board, posX, posY) {\n  for (let y = 0; y < piece.length; y++) {\n    for (let x = 0; x < piece[y].length; x++) {\n      if (piece[y][x]) {\n        const boardY = posY + y;\n        const boardX = posX + x;\n        if (\n          boardY >= ROWS ||\n          boardX < 0 ||\n          boardX >= COLS ||\n          (boardY >= 0 && board[boardY] && board[boardY][boardX])\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nexport function rotatePiece(piece, board, posX, posY) {\n  const rotated = rotateMatrix(piece);\n  if (!checkCollision(rotated, board, posX, posY)) {\n    return rotated;\n  }\n  return piece;\n}\n\nexport function movePiece(piece, direction, board, posX, posY) {\n  let newX = posX;\n  let newY = posY;\n  if (direction === 'left') newX -= 1;\n  if (direction === 'right') newX += 1;\n  if (direction === 'down') newY += 1;\n  if (!checkCollision(piece, board, newX, newY)) {\n    return { x: newX, y: newY };\n  }\n  return { x: posX, y: posY };\n}\n\nexport function placePiece(piece, board, posX, posY) {\n  const newBoard = board.map(row => [...row]);\n  for (let y = 0; y < piece.length; y++) {\n    for (let x = 0; x < piece[y].length; x++) {\n      if (piece[y][x]) {\n        const boardY = posY + y;\n        const boardX = posX + x;\n        if (boardY >= 0 && boardY < ROWS && boardX >= 0 && boardX < COLS) {\n          newBoard[boardY][boardX] = piece[y][x];\n        }\n      }\n    }\n  }\n  return newBoard;\n}\n\nexport function clearLines(board) {\n  // A line can be cleared only if it's completely filled with regular pieces (values 1-7)\n  // Penalty lines (value 9) and empty cells (value 0) cannot be cleared\n  const newBoard = board.filter(row => {\n    // Keep the row if:\n    // 1. It has at least one empty cell (0), OR\n    // 2. It has at least one penalty cell (9), OR  \n    // 3. It's not completely filled with regular pieces\n    const hasEmpty = row.some(cell => cell === 0);\n    const hasPenalty = row.some(cell => cell === 9);\n    const isCompletelyFilled = row.every(cell => cell >= 1 && cell <= 7);\n    \n    return hasEmpty || hasPenalty || !isCompletelyFilled;\n  });\n  \n  const linesCleared = ROWS - newBoard.length;\n  while (newBoard.length < ROWS) {\n    newBoard.unshift(Array(COLS).fill(0));\n  }\n  return { newBoard, linesCleared };\n}\n\n// Gravity+ mode: clear lines and apply gravity (move blocks down)\nexport function clearLinesWithGravity(board) {\n  // Default: just use clearLines for now (no gravity effect)\n  return clearLines(board);\n}\n\n// Adds 'count' indestructible penalty lines (value 9) to the bottom of the board\n// Removes the same number of rows from the top to keep the board at 20 rows\nexport function addPenaltyLines(board, count) {\n  if (count <= 0) return board.map(row => [...row]);\n  const COLS = board[0].length;\n  const penaltyLine = Array(COLS).fill(9);\n  const newBoard = board.slice(count).map(row => [...row]);\n  for (let i = 0; i < count; i++) {\n    newBoard.push([...penaltyLine]);\n  }\n  return newBoard;\n}\n\n// Generates the spectrum (first occupied cell per column, or 20 if empty)\nexport function generateSpectrum(board) {\n  const ROWS = board.length;\n  const COLS = board[0].length;\n  const spectrum = [];\n  for (let col = 0; col < COLS; col++) {\n    let found = false;\n    for (let row = 0; row < ROWS; row++) {\n      if (board[row][col] !== 0) {\n        spectrum.push(row);\n        found = true;\n        break;\n      }\n    }\n    if (!found) spectrum.push(ROWS);\n  }\n  return spectrum;\n}\n\n// Calcule la position du spectre (ombre de la pièce qui montre où elle va atterrir)\nexport function calculateShadowPosition(piece, board, posX, posY) {\n  let shadowY = posY;\n  \n  // Descendre jusqu'à la première collision\n  while (!checkCollision(piece, board, posX, shadowY + 1)) {\n    shadowY++;\n  }\n  \n  return { x: posX, y: shadowY };\n}\n\n// Génère le plateau avec la pièce actuelle et son spectre\nexport function getBoardWithPieceAndShadow(piece, board, posX, posY) {\n  const boardCopy = board.map(row => [...row]);\n  const shadowPos = calculateShadowPosition(piece, board, posX, posY);\n  \n  // Dessiner le spectre d'abord (avec une valeur spéciale -1) seulement si différent de la position actuelle\n  if (shadowPos.y !== posY) {\n    for (let y = 0; y < piece.length; y++) {\n      for (let x = 0; x < piece[y].length; x++) {\n        if (piece[y][x]) {\n          const boardY = shadowPos.y + y;\n          const boardX = shadowPos.x + x;\n          if (boardY >= 0 && boardY < board.length && boardX >= 0 && boardX < board[0].length) {\n            if (boardCopy[boardY][boardX] === 0) { // Ne dessiner que sur les cases vides\n              boardCopy[boardY][boardX] = -1; // Valeur spéciale pour le spectre\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  // Dessiner la pièce actuelle par-dessus\n  for (let y = 0; y < piece.length; y++) {\n    for (let x = 0; x < piece[y].length; x++) {\n      if (piece[y][x]) {\n        const boardY = posY + y;\n        const boardX = posX + x;\n        if (boardY >= 0 && boardY < board.length && boardX >= 0 && boardX < board[0].length) {\n          boardCopy[boardY][boardX] = piece[y][x];\n        }\n      }\n    }\n  }\n  \n  return boardCopy;\n}\n\n// --- 7-bag piece sequence generator ---\nconst TETROMINO_TYPES = ['I', 'O', 'T', 'S', 'Z', 'J', 'L'];\n\n// Simple seeded PRNG (mulberry32)\nfunction mulberry32(seed) {\n  return function() {\n    let t = seed += 0x6D2B79F5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n  };\n}\n\n// Fisher-Yates shuffle with optional PRNG\nfunction shuffle(array, rng = Math.random) {\n  const arr = array.slice();\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(rng() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\n\n// Returns a shuffled bag of 7 tetromino types\nexport function shuffleBag(seed) {\n  const rng = seed !== undefined ? mulberry32(seed) : Math.random;\n  return shuffle(TETROMINO_TYPES, rng);\n}\n\n/**\n * Generates a deterministic piece sequence for multiplayer games.\n * @param {number} length - The number of pieces to generate.\n * @param {number} seed - The seed for deterministic shuffling.\n * @returns {string[]} The piece sequence.\n */\nexport function createPieceSequence(length, seed) {\n  let sequence = [];\n  let bagCount = Math.ceil(length / 7);\n  for (let i = 0; i < bagCount; i++) {\n    // For determinism, use a different seed for each bag if seed is provided\n    const bagSeed = seed !== undefined ? seed + i : undefined;\n    sequence = sequence.concat(shuffleBag(bagSeed));\n  }\n  return sequence.slice(0, length);\n}\n\n/**\n * Returns the next piece type from the sequence at the given index.\n * @param {string[]} sequence - The piece sequence.\n * @param {number} index - The current index.\n * @returns {string} The next piece type.\n */\nexport function getNextPiece(sequence, index) {\n  return sequence[index % sequence.length];\n}"],"mappings":"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","ignoreList":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3e3ed3980c7c8e9efa05896d2162041cf59b538","contentHash":"5d4276ebe828b8d79383f0acd16b4ceafecdf00939f6597e39245e1d8abb544f"},"/Users/elias/Documents/GitHub/red-tetris/red_tetris_boilerplate/src/client/utils/tetrominos.js":{"path":"/Users/elias/Documents/GitHub/red-tetris/red_tetris_boilerplate/src/client/utils/tetrominos.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":91}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}},"5":{"start":{"line":11,"column":17},"end":{"line":19,"column":1}},"6":{"start":{"line":22,"column":23},"end":{"line":36,"column":1}},"7":{"start":{"line":40,"column":32},"end":{"line":72,"column":1}},"8":{"start":{"line":76,"column":2},"end":{"line":80,"column":5}},"9":{"start":{"line":77,"column":4},"end":{"line":79,"column":17}},"10":{"start":{"line":78,"column":6},"end":{"line":78,"column":20}},"11":{"start":{"line":85,"column":13},"end":{"line":85,"column":36}},"12":{"start":{"line":86,"column":13},"end":{"line":86,"column":58}},"13":{"start":{"line":87,"column":2},"end":{"line":90,"column":4}},"14":{"start":{"line":95,"column":2},"end":{"line":100,"column":4}}},"fnMap":{"0":{"name":"rotate","decl":{"start":{"line":75,"column":9},"end":{"line":75,"column":15}},"loc":{"start":{"line":75,"column":24},"end":{"line":81,"column":1}},"line":75},"1":{"name":"(anonymous_1)","decl":{"start":{"line":76,"column":23},"end":{"line":76,"column":24}},"loc":{"start":{"line":76,"column":39},"end":{"line":80,"column":3}},"line":76},"2":{"name":"(anonymous_2)","decl":{"start":{"line":77,"column":22},"end":{"line":77,"column":23}},"loc":{"start":{"line":77,"column":37},"end":{"line":79,"column":5}},"line":77},"3":{"name":"randomTetromino","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":24}},"loc":{"start":{"line":84,"column":27},"end":{"line":91,"column":1}},"line":84},"4":{"name":"getTetromino","decl":{"start":{"line":94,"column":9},"end":{"line":94,"column":21}},"loc":{"start":{"line":94,"column":28},"end":{"line":101,"column":1}},"line":94}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{},"inputSourceMap":{"version":3,"names":["TETROMINOS","exports","I","O","T","S","Z","J","L","TETROMINO_COLORS","TETROMINO_SPAWN_POSITIONS","row","col","rotate","matrix","map","_","i","reverse","randomTetromino","keys","Object","rand","Math","floor","random","length","shape","type","getTetromino","color","spawn"],"sourceRoot":"/Users/elias/Documents/GitHub/red-tetris/red_tetris_boilerplate/src/client/utils/","sources":["tetrominos.js"],"sourcesContent":["// Définition des 7 formes classiques de Tetris (matrices 4x4)\nexport const TETROMINOS = {\n  I: [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  O: [\n    [2, 2],\n    [2, 2],\n  ],\n  T: [\n    [0, 3, 0],\n    [3, 3, 3],\n    [0, 0, 0],\n  ],\n  S: [\n    [0, 4, 4],\n    [4, 4, 0],\n    [0, 0, 0],\n  ],\n  Z: [\n    [5, 5, 0],\n    [0, 5, 5],\n    [0, 0, 0],\n  ],\n  J: [\n    [6, 0, 0],\n    [6, 6, 6],\n    [0, 0, 0],\n  ],\n  L: [\n    [0, 0, 7],\n    [7, 7, 7],\n    [0, 0, 0],\n  ],\n};\n\n// Standard Tetris color mapping for each piece type\nexport const TETROMINO_COLORS = {\n  I: '#00f0f0', // Cyan\n  O: '#f0f000', // Yellow\n  T: '#a000f0', // Purple\n  S: '#00f000', // Green\n  Z: '#f00000', // Red\n  J: '#0000f0', // Blue\n  L: '#f0a000', // Orange\n};\n\n// Standard Tetris spawn positions for each piece type (row, col)\n// For a 20x10 board, pieces spawn near the top center\nexport const TETROMINO_SPAWN_POSITIONS = {\n  I: { row: 0, col: 3 }, // 4x4, so col 3 centers it\n  O: { row: 0, col: 4 }, // 2x2, so col 4 centers it\n  T: { row: 0, col: 3 }, // 3x3, so col 3 centers it\n  S: { row: 0, col: 3 },\n  Z: { row: 0, col: 3 },\n  J: { row: 0, col: 3 },\n  L: { row: 0, col: 3 },\n};\n\n// Fonction pure pour faire tourner une matrice (sens horaire)\nexport function rotate(matrix) {\n  return matrix[0].map((_, i) => matrix.map(row => row[i]).reverse());\n}\n\n// Génère un type de pièce aléatoire\nexport function randomTetromino() {\n  const keys = Object.keys(TETROMINOS);\n  const rand = keys[Math.floor(Math.random() * keys.length)];\n  return { shape: TETROMINOS[rand], type: rand };\n}\n\n// Utility to get a tetromino object by type, including shape, color, and spawn position\nexport function getTetromino(type) {\n  return {\n    type,\n    shape: TETROMINOS[type],\n    color: TETROMINO_COLORS[type],\n    spawn: TETROMINO_SPAWN_POSITIONS[type],\n  };\n}\n"],"mappings":"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","ignoreList":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5dc0b155a15873a85235146b25cd557c0682fe3c","contentHash":"cbe42e783bb1b3a11424fb0fd8104eeaf401344b5781cbc8a2bd6902e2aa81fc"}}